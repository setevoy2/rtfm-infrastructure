- name: "Read private env-specific variables from the {{ local_private_repo_location}}/vars/{{ env }}_db_projects.yml"
  include_vars:
    file: "{{ local_private_repo_location}}/vars/{{ env }}_db_projects.yml"

#- name: "Read private env-specific root credentials from the {{ local_private_repo_location}}/vars/{{ env }}_db_root.yml"
#  include_vars:
#    file: "{{ local_private_repo_location}}/vars/{{ env }}_db_root.yml"

- name: "Install MariaDB server"
  package:
    name: "{{ item }}"
    state: installed
  with_items: 
    - mariadb-server
    - python-mysqldb

- name: "Create {{ db_datadir }}"
  file:
    path: "{{ db_datadir }}"
    state: directory
    owner: "mysql"
    group: "mysql"

- name: "Check if {{ db_datadir }}/mysql present"
  stat:
    path: "{{ db_datadir }}/mysql"
  register: db_default_dir

- name: "Synchronize /var/lib/mysql with {{ db_datadir }}"
  synchronize:
    src: "/var/lib/mysql/"
    dest: "{{ db_datadir }}"
  delegate_to: "{{ inventory_hostname }}"
  when: not db_default_dir.stat.exists and not db_default_dir.stat.exists

- name: "Change 'datadir' to the {{ db_datadir }}"
  lineinfile:
    dest: "/etc/mysql/mariadb.conf.d/50-server.cnf"
    regexp: '^datadir'
    line: "datadir = {{ db_datadir }}"
    state: present

- name: "MariaDB restart and enable on boot"
  systemd:
    name: mariadb
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: "Delete default /var/lib/mysql"
  file:
    state: absent
    path: "/var/lib/mysql/"
  when: db_default_dir.stat.exists and db_default_dir.stat.exists

- name: "Update mysql root password"
  mysql_user:
    name: "{{ db_root_user }}"
    host: "{{ db_root_host }}"
    password: "{{ db_root_pass }}"
    login_user: "{{ db_root_user }}"
    login_password: "{{ db_root_pass }}"
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"

- name: "Remove anonymous user"
  mysql_user:
    name: ''
    host: localhost
    state: absent
    login_user: "{{ db_root_user }}"
    login_password: "{{ db_root_pass }}"

- name: "Disable root@localhost NOPASSWD login"
  command: "{{ item }}"
  with_items:
   - "mysql -u {{ db_root_user }} -p{{ db_root_pass }} --execute=\"UPDATE mysql.user SET plugin = '' WHERE user = 'root' AND host = 'localhost'\""
   - "mysql -u {{ db_root_user }} -p{{ db_root_pass }} --execute=\"FLUSH PRIVILEGES\""

- name: "Create databases"
  mysql_db:
    name: "{{ item.1 }}"
    state: present
    login_user: "{{ db_root_user }}"
    login_password: "{{ db_root_pass }}"
  with_subelements:
    - "{{ db_projects }}"
    - databases

- name: "Create projects users"
  mysql_user:
    name: "{{ item.key }}"
    password: "{{ item.value.password }}"
    state: present
    login_user: "{{ db_root_user }}"
    login_password: "{{ db_root_pass }}"
  with_dict: "{{ db_users }}"

- name: "Grant permissions"
  mysql_user:
    name: "{{ item.0.name }}"
    priv: "{{ item.1 }}.*:ALL"
    append_privs: "yes"
    state: present
    login_user: "{{ db_root_user }}"
    login_password: "{{ db_root_pass }}"
  with_subelements:
    - "{{ db_projects }}"
    - databases
